// Mathematical Approach
#include <bits/stdc++.h>

pair<int,int> missingAndRepeating(vector<int> &arr, int n)
{
	long sum = 0, sqsum = 0;
	for(int i = 0;i < n;i++) {
		sum += arr[i];
		sqsum += arr[i] * arr[i];
	}
	long a = 1LL * n * (n + 1) / 2 - sum;
	long b = 1LL * n * (n + 1) * (2 * n + 1) / 6 - sqsum;
	long c = b/a;
	int missing = (c + a) / 2;
	int repeating = (c - a) / 2;
    return {missing, repeating};
}

// O(n) Solution
#include <bits/stdc++.h>

pair<int,int> missingAndRepeating(vector<int> &arr, int n)
{
	int missing = -1, repeating = -1;
	for(int i = 0;i < n;i++) {
		int pos = abs(arr[i]) - 1;
		if(arr[pos] < 0) repeating = pos + 1;
		arr[pos] = -abs(arr[pos]);
	}
	for(int i = 0;i < n;i++) {
		if(arr[i] > 0) missing = i + 1;
	}

	return {missing, repeating};
}
