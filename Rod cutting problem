// Recursive Approach

vector<int> dp;
int cutRod2(vector<int>& price, int n) {
	if(dp[n] != -1) return dp[n];
	int res = price[n - 1];
	for(int i = 1;i <= n/2;i++) {
		int profit1 = cutRod2(price, i);
		int profit2 = cutRod2(price, n - i);
		res = max(res, profit1 + profit2);
	}
	return dp[n] = res;
}

int cutRod(vector<int> &price, int n)
{
	dp = vector<int>(n + 1, -1);
	return cutRod2(price, n);
}

// Tabulation Method
int cutRod(vector<int> &price, int n)
{
	vector<int> dp(n + 1);
	
	for(int len = 1;len <= n;len++) {
		dp[len] = price[len - 1];
		for(int i = 1;i <= len/2;i++) {
			dp[len] = max(dp[len], dp[i] + dp[len - i]);	
		}
	}
	return dp[n];
}

