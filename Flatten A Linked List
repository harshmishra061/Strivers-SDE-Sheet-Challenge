Node* merge(Node* head1, Node* head2) {

	Node* dummy = new Node(-1);
	Node* itr = dummy;
	while(head1 != NULL && head2 != NULL) {
		if(head1->data < head2->data) {
			itr->child = head1;
			head1 = head1->child;
		} else {
			itr->child = head2;
			head2 = head2->child;
		}
		itr = itr->child;
	}
	if(head1 != NULL) itr->child = head1;
	if(head2 != NULL) itr->child = head2;

	return dummy->child;
}

Node* flattenLinkedList(Node* head) 
{
	Node* res = NULL;
	while(head != NULL) {
		Node* nxt = head->next;
		head->next = NULL;
		res = merge(res, head);
		head = nxt;
	}
	return res;
}
