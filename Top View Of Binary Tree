#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure:

    template <typename T>
    class TreeNode {
       public:
        T val;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T val) {
            this->val = val;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
void preorder(TreeNode<int>* node, int& minvl, int& maxvl, int currl) {
    if(node == NULL) return;
    minvl = min(minvl, currl);
    maxvl = max(maxvl, currl);
    preorder(node->left, minvl, maxvl, currl - 1);
    preorder(node->right, minvl, maxvl, currl + 1);
}

vector<int> getTopView(TreeNode<int> *root) {
    if(root == NULL)    return {};
    int minvl = 0, maxvl = 0;
    preorder(root, minvl, maxvl, 0);
    vector<int> res(maxvl - minvl + 1, -1);
    queue<pair<TreeNode<int>*, int>> q;
    q.push({root, -minvl});
    while(!q.empty()) {
        root = q.front().first;
        int vl = q.front().second; q.pop();
        if(res[vl] == -1) {
            res[vl] = root->val;
        }
        if(root->left != NULL) q.push({root->left, vl - 1});
        if(root->right != NULL) q.push({root->right, vl + 1});
    }
    return res;
}
