int singleNonDuplicate(vector<int>& arr)
{
	int n = arr.size(); // n is odd since every number occured twice except one number
	
	if(n == 1) return arr[0];
	else if(arr[0] != arr[1]) return arr[0];
	else if(arr[n - 2] != arr[n - 1]) return arr[n - 1];
	else {
		int low = 0, high = n - 1;
		while(low <= high) {
			int mid = low + (high - low) / 2;
			if(arr[mid - 1] != arr[mid] && arr[mid] != arr[mid + 1]) return arr[mid];
			else if(arr[mid - 1] == arr[mid]) {
				int len = mid - low + 1;
				if(len % 2 == 0) {
					low = mid + 1;
				} else {
					high = mid - 2;
				}
			} else {
				int len = high - mid + 1;
				if(len % 2 == 0) {
					high = mid - 1;
				} else {
					low = mid + 2;
				}
			}
		}
	}
}
