long long pathSum(TreeNode<int>* node, long long& res) {
    if(node == NULL) return 0;
    if(node->left == NULL && node->right == NULL) return node->val;

    int leftPathSum = pathSum(node->left, res);
    int rightPathSum = pathSum(node->right, res);
    
    if(node->left != NULL && node->right != NULL){
        long long tres = node->val + leftPathSum + rightPathSum;
        res = max(res, tres);
    }
    
    return node->val + max(leftPathSum, rightPathSum);
}

long long int findMaxSumPath(TreeNode<int> *root)
{
    long long res = -1;
    if(root == NULL) return res;
    pathSum(root, res); // returns the maxPathSum from root to a leaf node
    return res; 
}
