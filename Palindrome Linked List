LinkedListNode<int>* reverse(LinkedListNode<int>* curr) {
    LinkedListNode<int>* prev = NULL;
    while(curr != NULL) {
        LinkedListNode<int>* next = curr->next;
        curr->next = prev;
        prev = curr;
        curr = next;
    }
    return prev;
}


bool isPalindrome(LinkedListNode<int> *head) {
    if(head == NULL) return true;
    LinkedListNode<int>* slow = head, *fast = head;
    while(fast->next != NULL && fast->next->next != NULL) {
        slow = slow->next;
        fast = fast->next->next;
    }
    LinkedListNode<int>* head1 = head, *head2 = slow->next;
    head2 = reverse(head2);
    while(head2 != NULL) {
        if(head1->data != head2->data) return false;
        head1 = head1->next;
        head2 = head2->next;
    }
    return true;
}
