vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    vector<int> res;
    if(root == NULL) return res;
    queue<BinaryTreeNode<int>*> q;
    q.push(root);
    bool leftToRight = true;
    while(!q.empty()) {
        int ressz = res.size(), qsz = q.size();
        res.resize(ressz + qsz);
        for(int i = 0;i < qsz;i++) {
            root = q.front(); q.pop();
            if(leftToRight == true) {
                res[ressz + i] = root->data;
            } else {
                res[ressz + qsz - 1 - i] = root->data;
            }
            if(root->left != NULL) q.push(root->left);
            if(root->right != NULL) q.push(root->right);
        }
        leftToRight = !leftToRight;
    }
    return res;
}
