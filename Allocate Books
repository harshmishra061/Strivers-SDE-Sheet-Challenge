#include <bits/stdc++.h> 

long long func(long long maxBound, vector<int>& time) {
	long long dayReq = 1;
	long long t = time[0];
	for(int i = 1;i < time.size();i++) {
		if(t + time[i] <= maxBound) {
			t += time[i];
		} else {
			dayReq++;
			t = time[i];
		}
	}
	return dayReq;
}

long long ayushGivesNinjatest(int n, int m, vector<int> time) 
{	
	long long low = *max_element(time.begin(), time.end());
	long long high = accumulate(time.begin(), time.end(), 0LL);


	long long res = -1;

	while(low <= high) {
		long long mid = low + (high - low) / 2; // mid is the maximum time for which books can be read in one day
		long long dayReq = func(mid, time); // days required to read all the books if maxBound for each day is "mid"
		if(dayReq > n) {
			low = mid + 1;
		} else {
			res = mid;
			high = mid - 1;
		}
	}
	return res;

}
