#include <bits/stdc++.h> 
vector<vector<int>> dir;

void ratInAMaze2(int i, int j, vector<vector<int>>& maze, int n, vector<int>& path, vector<vector<int>>& res) {
  if(i == n - 1 && j == n - 1) {
    path.back() = 1;
    res.push_back(path);
    path.back() = 0;
  } else {
    maze[i][j] = 0;
    path[n * i + j] = 1;
    for(int k = 0;k < 4;k++) {
      int newi = i + dir[k][0], newj = j + dir[k][1];
      if(newi >= 0 && newi < n && newj >= 0 && newj < n && maze[newi][newj] == 1) {
        ratInAMaze2(newi, newj, maze, n, path, res);
      }
    }
    maze[i][j] = 1;
    path[n * i + j] = 0;
  }


}



vector<vector<int>> ratInAMaze(vector<vector<int> > &maze, int n){
  if(maze[0][0] == 0 || maze[n - 1][n - 1] == 0) return {};
  vector<vector<int>> res;   vector<int> path(n*n, 0);
  dir = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};
  ratInAMaze2(0, 0, maze, n, path, res);
  return res;
}
