void preorder(TreeNode* node, vector<int>& res) {
    if(node == NULL) return;
    res.push_back(node->data);
    preorder(node->left, res);
    preorder(node->right, res);
}

vector<int> getPreOrderTraversal(TreeNode *root)
{
    vector<int> res;
    preorder(root, res);
    return res;
}


//Iterative : Using Stack
vector<int> getPreOrderTraversal(TreeNode *root)
{
    vector<int> res;
    stack<TreeNode*> st;
    while(root != NULL || !st.empty()) {
        if(root != NULL) {
            res.push_back(root->data);
            st.push(root);
            root = root->left;
        } else {
            root = st.top(); st.pop();
            root = root->right;
        }
    }
    return res;

}
