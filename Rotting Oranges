#include<bits/stdc++.h>
int minTimeToRot(vector<vector<int>>& grid, int n, int m)
{
    int totOranges = 0, rotOranges = 0;
    queue<pair<int, int>> q;
    for(int i = 0;i < n;i++) {
        for(int j = 0;j < m;j++) {
            if(grid[i][j] != 0) totOranges++;
            if(grid[i][j] == 2) {
                rotOranges++;
                q.push({i, j});
            }
        }
    }
    vector<vector<int>> dir = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}}; 
    int t = 0;
    while(!q.empty()) {
        int sz = q.size();
        while(sz--) {
            int i = q.front().first;
            int j = q.front().second; q.pop();
            for(int k = 0;k < 4;k++) {
                int newi = i + dir[k][0];
                int newj = j + dir[k][1];
                if(newi >= 0 && newi < n && newj >= 0 && newj < m && grid[newi][newj] == 1) {
                    grid[newi][newj] = 2;
                    rotOranges++;
                    q.push({newi, newj});
                }
            }
        }

        if(!q.empty()) t++;
    }
    if(totOranges != rotOranges) return -1;
    return t;
}
