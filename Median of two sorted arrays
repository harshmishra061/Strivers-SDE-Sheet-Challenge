double median(vector<int>& a, vector<int>& b) {
	if(a.size() > b.size()) return median(b, a);

	int n = a.size(), m = b.size();
	int k = (n + m)/2;

	int low = 0, high = n;

	while(low <= high) {
		int cut1 = low + (high - low) / 2;
		int cut2 = k - cut1;

		int al = cut1 > 0 ? a[cut1 - 1] : INT_MIN;
		int ar = cut1 < n ? a[cut1] : INT_MAX;
		int bl = cut2 > 0 ? b[cut2 - 1] : INT_MIN;
		int br = cut2 < m ? b[cut2] : INT_MAX;

		if(al <= br && bl <= ar) {
			if((n + m) % 2 == 1) {
				return min(ar, br);
			} else {
				return (max(al, bl) + min(ar, br)) / 2.0;
			}
		} else if(al >= br) {
			high = cut1 - 1;
		} else {
			low = cut1 + 1;
		}
	}

	return 0;
}
