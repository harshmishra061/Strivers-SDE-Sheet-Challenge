void preorder(TreeNode<int>* root, int& minvl, int& maxvl, int currl) {
    if(root == NULL) return;
    minvl = min(minvl, currl);
    maxvl = max(maxvl, currl);
    preorder(root->left, minvl, maxvl, currl - 1);
    preorder(root->right, minvl, maxvl, currl + 1);
}
vector<int> verticalOrderTraversal(TreeNode<int> *root)
{
    int minvl = 0, maxvl = 0;
    preorder(root, minvl, maxvl, 0);
    vector<vector<int>> arr(maxvl - minvl + 1);
    queue<pair<TreeNode<int>*, int>> q;
    q.push({root, -minvl});
    while(!q.empty()) {
        root = q.front().first;
        int vl = q.front().second; q.pop();
        arr[vl].push_back(root->data);
        if(root->left != NULL) q.push({root->left, vl - 1});
        if(root->right != NULL) q.push({root->right, vl + 1});
    }

    vector<int> res;
    for(int i = 0;i < arr.size();i++) {
        res.insert(res.end(), arr[i].begin(), arr[i].end());
    }
    return res;
}
